<script>

    // extractValue extracts the value from an undecodeable json cookie string
    function extractValue(key, extractionString) {
        const extractionRegex = new RegExp(`'${key}':(.*?)[,}]`)
        const match = extractionString.match(extractionRegex)
        if (match) {
            return match[1]
        }
        
        return null
    }

    // getUsageCookieValue reads the ons_cookie_policy to determine the user's usage preference. 
    // When no policy is found, the user is opted out by default.
    function getUsageCookieValue() {
        // ons_cookie_policy handler
        var policyCookie = document.cookie.match('(?:^|; )ons_cookie_policy=({.*?})');
        if (policyCookie) {
            console.debug('ons_cookie_policy found');

            var usageValue = extractValue("usage", policyCookie[1]);
            console.debug('usage is', usageValue);

            // this needs to be the inverse - if usage is true the returned value is false and vice versa
            // user is stating whether they are opting out of usage cookie
            return (usageValue == "true") ? false : true
        }
        console.debug('no cookie found - opting out');
        return true
    }

    // unescape html entities
    function htmlUnescape(str) {
        return str.replace(/&#x3D;/g, "=");
    }

    dataLayer = [{
        "analyticsOptOut": getUsageCookieValue(),
        "gtm.whitelist": ["google", "hjtc", "lcl"],
        "gtm.blacklist": ["customScripts", "sp", "adm", "awct", "k", "d", "j"],
    {{ if .DatasetTitle }}
        "contentTitle": htmlUnescape({{ .DatasetTitle }}),
        "filterTitle": htmlUnescape({{ .Metadata.Title }}),
    {{ else }}
        "contentTitle": htmlUnescape({{ .Metadata.Title }}),
    {{ end }}
    {{ if .ReleaseDate }}
        "releaseDate": {{ dateFormatYYYYMMDD .ReleaseDate }},
    {{ end }}
    {{ if eq .Type "search" }}
        "numberOfResults": {{ .Count }},
        "resultsPage": {{ .Pagination.CurrentPage }},
    {{ end }}
    {{ if .ABTest.GTMKey }}
        "abTest": {{ .ABTest.GTMKey }},
    {{ end }}
    {{ if .Type }}
        "contentType": {{ .Type }},
    {{ end }}
    {{ if .DatasetId }}
        "datasetID": {{ .DatasetId }},
    {{ end }}
    }];

</script>
